name: Lighthouse CI
on: push
jobs:
  lighthouse_CI:
    runs-on: ubuntu-latest
    steps:
      - name: Await for Vercel deployment
        uses: UnlyEd/github-action-await-vercel@v1.1.2
        id: wait-for-vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          deployment-url: https://rockstars-static.vercel.app/
          timeout: 360

      - name: Displays the deployment name
        run: "echo The deployment at ${{ fromJson(steps.await-vercel.outputs.deploymentDetails).url }} is ${{ fromJson(steps.await-vercel.outputs.deploymentDetails).readyState }}"

      - uses: actions/checkout@v2

      - name: Sleep for 15 seconds to settle deployment
        run: sleep 15s
        shell: bash

      - name: Audit preview URL with Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v7
        with:
          urls: |
            ${{ steps.wait-for-vercel.outputs.url }}
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v4.0.2
        with:
          github-token: ${{secrets.PERSONAL_TOKEN_GITHUB}}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}

            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))

            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'

            const comment = [
                `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
                '| Category | Score |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} |`,
                ' ',
                `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
            ].join('\n')

             core.setOutput("comment", comment);

      - uses: jwalton/gh-find-current-pr@v1
        id: finder

      - name: Add comment to PR
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v2.1.0
        with:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN_GITHUB }}
          number: ${{ steps.finder.outputs.pr }}
          header: lighthouse
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}
